{
	"info": {
		"_postman_id": "5868dd3e-1693-4319-921d-b08873eaeaa9",
		"name": "Desafio Shift FIAP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1524675"
	},
	"item": [
		{
			"name": "Cliente",
			"item": [
				{
					"name": "POST PF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseJson = null;\r",
									" \r",
									"pm.test(\"X-Frame-Options\", () => {\r",
									"    responseJson = pm.response;\r",
									"   pm.expect(pm.response.headers.get('X-Frame-Options'));\r",
									"});\r",
									" \r",
									"try{\r",
									"    if(responseJson.to.have.status(201)){\r",
									"        pm.test(\"Existe Location do Cliente Cadastrado\", () => {\r",
									"            responseJson = pm.response;\r",
									"            pm.expect(pm.response.headers.get('Location'));\r",
									"        });\r",
									"    }\r",
									"}catch(e ){\r",
									"    try{\r",
									"        if(responseJson.to.have.status(400)){\r",
									"\r",
									"            pm.test(\"Content-Type header is application/json\", () => {\r",
									"                responseJson = pm.response;\r",
									"                pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"            });\r",
									"\r",
									"            pm.test(\"Mensagem de Recurso já existente\", () => {\r",
									"                pm.expect(pm.response.text()).to.include(\"Já existe cliente cadastrado com o email informado!\");\r",
									"            });\r",
									"        }\r",
									"    }catch(e ){\r",
									"        console.log(e)\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									" \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Benefrancis do Nascimento\",\r\n    \"nascimento\": \"1977-03-08\",\r\n    \"email\": \"benefrancis5@gmail.com\",\r\n    \"tipo\": {\r\n        \"id\": 1,\r\n        \"nome\": \"Pessoa Física\",\r\n        \"sigla\": \"PF\"\r\n    },\r\n    \"telefone\": {\r\n        \"ddi\": \"55\",\r\n        \"ddd\": \"11\",\r\n        \"numero\": \"982816536\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cliente",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST PJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseJson = null;\r",
									" \r",
									"pm.test(\"X-Frame-Options\", () => {\r",
									"    responseJson = pm.response;\r",
									"   pm.expect(pm.response.headers.get('X-Frame-Options'));\r",
									"});\r",
									" \r",
									"try{\r",
									"    if(responseJson.to.have.status(201)){\r",
									"        pm.test(\"Existe Location do Cliente Cadastrado\", () => {\r",
									"            responseJson = pm.response;\r",
									"            pm.expect(pm.response.headers.get('Location'));\r",
									"        });\r",
									"    }\r",
									"}catch(e ){\r",
									"    try{\r",
									"        if(responseJson.to.have.status(400)){\r",
									"\r",
									"            pm.test(\"Content-Type header is application/json\", () => {\r",
									"                responseJson = pm.response;\r",
									"                pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"            });\r",
									"\r",
									"            pm.test(\"Mensagem de Recurso já existente\", () => {\r",
									"                pm.expect(pm.response.text()).to.include(\"Já existe cliente cadastrado com o email informado!\");\r",
									"            });\r",
									"        }\r",
									"    }catch(e ){\r",
									"        console.log(e)\r",
									"    }\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"FIAP Alura\",\r\n    \"nascimento\": null,\r\n    \"email\": \"shift-java-11@fiap.com.br\",\r\n    \"tipo\": {\r\n        \"id\": 2,\r\n        \"nome\": \"Pessoa Jurídica\",\r\n        \"sigla\": \"PJ\"\r\n    },\r\n    \"telefone\": {\r\n        \"ddi\": \"55\",\r\n        \"ddd\": \"11\",\r\n        \"numero\": \"33858010\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/cliente",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CLIENTES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"    pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cliente",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO CLIENTE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido e com paginação\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"    pm.expect(pm.response.text()).to.include(\"sigla\");\r",
									"    pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cliente/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO CLIENTE ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"    pm.expect(pm.response.text()).to.include(\"sigla\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cliente/tipo/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"tipo",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Documento",
			"item": [
				{
					"name": "GET DOCUMENTOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Documentos\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"numero\");\r",
									"    pm.expect(pm.response.text()).to.include(\"cliente\");\r",
									"    pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cliente/1/documento",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"documento"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST DOCUMENTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseJson = null;\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"    responseJson = pm.response;\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n    {\r\n        \"numero\": \"11319526000155\",\r\n        \"tipo\": {\r\n            \"id\": 3,\r\n            \"nome\": \"CNPJ\"\r\n        },\r\n        \"emissao\": null,\r\n        \"validade\": null,\r\n        \"cliente\": {\r\n            \"id\": 1\r\n        }\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/cliente/1/documento",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"documento"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET DOCUMENTO POR ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Documentos\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"numero\");\r",
									"     pm.expect(pm.response.text()).to.include(\"cliente\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cliente/1/documento/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"documento",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT DOCUMENTO",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \r\n    \"numero\": \"000000000/0001-91\",\r\n    \"tipo\": {\r\n        \"id\": 3,\r\n        \"nome\": \"CNPJ\"\r\n    },\r\n    \"emissao\": null,\r\n    \"validade\": null,\r\n    \"cliente\": {\r\n        \"id\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cliente/1/documento/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"documento",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO DOCUMENTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Tipo de Documento\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"     pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/documento/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"documento",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO DOCUMENTO ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Tipo de Documento\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									" \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/documento/tipo/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"documento",
								"tipo",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Equipamento",
			"item": [
				{
					"name": "GET EQUIPAMENTOS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Tipos de Equipamentos de Um cliente\",() => {\r",
									"     pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/cliente/1/equipamento",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"equipamento"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO EQUIPAMENTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Tipos de Equipamentos de Um cliente\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"     pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipamento/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipamento",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST TIPO EQUIPAMENTO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\" : \"Roteador\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/equipamento/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipamento",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO EQUIPAMENTO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"API response contians the expected header\", () => {\r",
									"  pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido para Listagem de Tipos de Equipamentos\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"     pm.expect(pm.response.text()).to.include(\"pageable\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipamento/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipamento",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO EQUIPAMENTO ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body válido  Tipo de Equipamento com um determonado ID\",() => {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"nome\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/equipamento/tipo/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"equipamento",
								"tipo",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EQUIPAMENTO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numeroDeSerie\": \"998989888\",\r\n    \"tipo\": {\r\n        \"id\": 3\r\n    },\r\n    \"cliente\": {\r\n        \"id\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/cliente/1/equipamento",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cliente",
								"1",
								"equipamento"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SERVICO",
			"item": [
				{
					"name": "GET SERVICOS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/servico",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"servico"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO SERVICO",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/servico/tipo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"servico",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TIPO SERVICO ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/servico/tipo/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"servico",
								"tipo",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST SERVICO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseJson = null;\r",
									"\r",
									"pm.test(\"X-Frame-Options\", () => {\r",
									"    responseJson = pm.response;\r",
									"   pm.expect(pm.response.headers.get('X-Frame-Options'));\r",
									"});\r",
									"\r",
									"if(responseJson.to.have.status(201)){\r",
									"    pm.test(\"Existe Location do Cliente Cadastrado\", () => {\r",
									"        responseJson = pm.response;\r",
									"    pm.expect(pm.response.headers.get('Location'));\r",
									"    });\r",
									"}\r",
									" \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"descricao\": \"Instalação de pente de memória\",\r\n    \"valor\": 50.0,\r\n    \"tipo\": {\r\n        \"id\": 4\r\n    },\r\n    \"dataAutorizacao\": \"2022-12-27 21:36:06\",\r\n    \"dataInicio\": \"2022-12-28 19:36:29\",\r\n    \"dataConclusao\": \"2022-12-28 21:36:13\",\r\n    \"equipamento\": {\r\n        \"id\": 5\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/servico",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"servico"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Enviamos com sucesso um POST request\", () => {\r",
									"  pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Retornou um token\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type é application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"A requisição contém username\", () => {\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.username);\r",
									"});\r",
									"\r",
									"pm.test(\"A requisição contém password\", () => {\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.password);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"root@hatecnica.com.br\",\r\n    \"password\": \"root\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyb290QGhhdGVjbmljYS5jb20uYnIiLCJpc3MiOiJIw6EgVMOpY25pY2EiLCJleHAiOjE2NzIyOTU2ODR9.ukYjHIUoVHgJl70X3kuO-W96IiGVEjuLz_XXboT37ak",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}